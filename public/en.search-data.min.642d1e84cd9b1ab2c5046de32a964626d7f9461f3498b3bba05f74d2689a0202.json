[{"id":0,"href":"/posts/Typora%E4%BF%AE%E6%94%B9%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93%E6%A0%B7%E5%BC%8F%E5%90%AB%E4%BB%A3%E7%A0%81%E5%9D%97%E4%B8%AD%E7%9A%84%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93/","title":"Typora修改字体样式","section":"Blog","content":"\rTypora修改字体样式（含代码块中的字体）\r#\r1. 修改页面文字体显示\r#\r偏好设置 →外观，找到主题一栏，打开主题文件夹，选择你当前主题下的**.CSS**文件。如我使用的是github主题，则我打开github.css文件。\n找到以下代码，将你想用的字体放在font-family的第一个位置。如我使用的就是华康手札体W5P。同样你可以换成微软雅黑、华文行楷等字体（看个人喜好）。自己系统里存的字体可以在C:\\Windows\\Fonts下看，选择自己喜欢的字体。\nbody { font-family: \u0026#34;华康手札体W5P\u0026#34;,\u0026#34;Clear Sans\u0026#34;, \u0026#34;Helvetica Neue\u0026#34;, Helvetica, Arial, \u0026#39;Segoe UI Emoji\u0026#39;, sans-serif; color: rgb(51, 51, 51); line-height: 1.6; } 2. 代码块文字体修改\r#\r上述字体样式的修改只会修改正常页面下的字体样式，并不会改变代码块中的字体。代码块中的字体样式的修改，同样在对应主题文件夹下的**.CSS文件中。找到以下代码，在原代码中加入font-family**设置，如下所示。\n# 复制如下命令进.css文件中，font-family为你在代码块中想用的字体 .CodeMirror-wrap .CodeMirror-code pre {\tfont-family: \u0026#34;华康手札体W5P\u0026#34;, \u0026#34;JetBrains Mono\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34; } # 在以下代码中加入font-family属性 .md-fences, code, tt { border: 1px solid #e7eaed; background-color: #f8f8f8; border-radius: 3px; padding: 0; padding: 2px 4px 0px 4px; font-size: 0.9em; font-family: \u0026#34;华康手札体W5P\u0026#34; } 上述修改完成后重启Typora，字体样式就修改好了。\n"},{"id":1,"href":"/posts/Hugo-notes/","title":"Getting Started with Hugo","section":"Blog","content":"\rHugo notes\r#\rHugo official website\nHugo, written in Go, is a kind of static site generator which is fast and user-friendly. Websites built with Hugo are extremely fast and secure.\nBefore Hugo\r#\rCreate a new repository in your github.\nRepository name mast be the [username].github.io\r​\t2.Config your github pages.\nHugo directory structrue\r#\r--\u0026gt;yourBlogRoot/ (Blog Root) --\u0026gt;archetypes/ --\u0026gt;assets/ --\u0026gt;content/\t# markdown files get turned into online pages, posts, etc --\u0026gt;data/ --\u0026gt;i18n/ --\u0026gt;layouts/\t# html templates provide structure --\u0026gt;public/ --\u0026gt;resources/ --\u0026gt;static/\t# images, css, js files available at site root --\u0026gt;themes/ # downloaded themes --\u0026gt;config.toml\t# hugo configuration settings Hugo basic syntex\r#\rCreate a hugo directory to store all the source files and configurations , then get into the root directory:\nhugo new site myBlog cd myBlog Create your contents. To build your site, run the following code:\nhugo ​\tThe pubilc directory will be generated when you run this command.\nTo view your site while developing layouts or creating contents, get into your root directory and run:\nhugo server (use \u0026#34;hugo server --help\u0026#34; to see more operations) Comparison with Hexo(other site generator), Hugo can\u0026rsquo;t submit new contents to GitHub Pages automatically. So that\u0026rsquo;s our job.\nIf you are the first time to develop Hugo using GitHub Pages, run the following code:\ngit init git remote add origin https://github.com/[GitHub username]/[GitHub username].github.io.git git add -A git commit -m \u0026#34;whaterver you want to introduce your repo\u0026#34; git push -u origin master If not, run the following code when you need to upload new contents:\ngit add -A git commit -m \u0026#34;Introduce this change\u0026#34; git push -u origin master "},{"id":2,"href":"/posts/Markdown-Guide-and-Basic-Syntax/","title":"Markdown Guide and Basic Syntax","section":"Blog","content":"\rMarkdown Guide and Basic Syntax\r#\rHyper Links : [displayed contents](target website) "},{"id":3,"href":"/docs/Light-Weight-Neural-Networks/","title":"Light Weight Neural Networks","section":"Docs","content":"\rLight Weight Neural Networks Intro\r#\rLight Weight Neural Networks are a series of extremly efficient network. It pay more attention on model size or inference time. Although, there are numerous large models\n"},{"id":4,"href":"/docs/Reinforcement-Learning/","title":"Reinforcement learning","section":"Docs","content":"\rReinforcement Learning Intro\r#\r"}]